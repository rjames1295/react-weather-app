{"version":3,"sources":["store/StoreConstants.js","store/Reducers.js","store/Store.js","serviceWorker.js","config/config.js","components/modals/AddAPIKeyModal.js","components/modals/ConfirmModal.js","utils/_helpers.js","router/routes.js","components/shared/Drawer.js","components/shared/NavBarMaterial.js","components/shared/Footer.js","components/shared/Alerts.js","store/Actions.js","api_service/_axios.js","hooks/_useHttpGet.js","api_service/weather.js","components/shared/RecursiveData.js","components/weather/CurrentWeather.js","components/shared/WeatherCard.js","components/weather/ForecastedWeatherFiveDays.js","components/landing_page/WeatherContainer.js","utils/_geolocation.js","pages/LandingPage.js","pages/NotFoundPage.js","pages/AboutPage.js","pages/BuiltWithPage.js","router/router.js","App.js","hooks/_usePrevious.js","assets/material-theme.js","index.js"],"names":["StoreConstants","combineReducers","currentUserGeolocation","state","action","type","SC","payload","warningList","errorList","store","applyMiddleware","thunk","createStore","reducers","window","Boolean","location","hostname","match","baseAPIURL","useStyles","makeStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","AddAPIKeyModal","props","classes","_closeHandler","isOpen","useState","apiKey","setApiKey","enqueueSnackbar","useSnackbar","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","className","id","IconButton","aria-label","onClick","DialogContent","DialogContentText","href","target","rel","TextField","autoFocus","label","fullWidth","required","onChange","event","value","checked","DialogActions","Button","localStorage","setItem","reload","variant","color","ConfirmModal","message","_onDecide","camelCaseToNormalCase","str","replace","str2","toUpperCase","routes","list","width","fullList","getItem","ListItemLink","ListItem","button","component","Link","Drawer","isAddAPIKeyModalOpen","setIsAddAPIKeyModalOpen","isConfirmModalOpen","setIsConfirmModalOpen","isDrawerOpen","setIsDrawerOpen","_toggleDrawer","key","_toggleAddAPIKeyModal","_toggleConfirmModal","_toggleHandler","isConfirmed","SwipeableDrawer","anchor","onOpen","role","onKeyDown","List","to","ListItemIcon","ListItemText","Divider","num","length","slice","truncateString","ListItemSecondaryAction","edge","NavBarMaterial","themeSetting","AppBar","Toolbar","Typography","Tooltip","title","footer","bottom","backgroundColor","Footer","Grid","container","item","lg","Container","connect","useLocation","pathname","Alert","severity","map","warning","index","uniqKey","String","error","_actionAddToErrors","_axios","axios","create","interceptors","request","use","config","err","response","data","dispatch","Promise","reject","useHttpGet","url","setUrl","params","setParams","isLoading","setIsLoading","fetchedData","setFetchedData","responseCode","setResponseCode","errorMessage","setErrorMessage","useEffect","console","log","a","async","get","catch","status","_fetchData","OWMAPIKey","defaultUnit","_weatherAPI","geolocation","lat","lng","ExpandableProperty","expanded","setIsOpen","style","cursor","textStyle","children","RecursiveData","property","propertyName","rootProperty","Object","values","getOwnPropertyNames","excludeBottomBorder","React","memo","currentWeatherInfo","isWeatherInfoLoading","currentWeatherErrMsg","errMessage","CircularProgress","Card","CardContent","gutterBottom","name","day","CardActions","size","prevProps","nextProps","card","minWidth","bullet","display","transform","fontSize","pos","marginBottom","WeatherCard","weatherInfo","_key","main","temp","feels_like","temp_min","temp_max","pressure","humidity","_renderWeatherInfo","weatherResponse","groupedWeatherData","days","Map","weather","moment","dt","format","push","_groupWeatherByDay","forecastWeatherCity","city","keys","md","sm","_index","Fragment","setCurrentUserGeolocation","unsetCurrentUserGeolocation","resolve","navigator","getCurrentPosition","coords","latitude","longitude","LandingPage","NotFound","document","body","classList","add","remove","AboutPage","heading","typography","pxToRem","fontWeight","fontWeightRegular","frontendEndTechStackList","description","link","icon","SimpleExpansionPanel","isFrontendPanelOpen","setIsFrontendPanelOpen","isAPIPanelOpen","setIsAPIPanelOpen","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","tech","ListItemAvatar","Avatar","primary","secondary","Router","exact","path","render","BuiltWithPage","NotFoundPage","App","currentLocation","prevLocation","ref","useRef","current","usePrevious","undefined","isLightTheme","darkTheme","palette","orange","green","text","disabled","hint","materialTheme","createMuiTheme","ReactDOM","ThemeProvider","CssBaseline","basename","maxSnack","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.140f81ba.chunk.js","sourcesContent":["export const StoreConstants = {\n    SET_CURRENT_USER_GEOLOCATION: \"SET_CURRENT_USER_GEOLOCATION\",\n    UNSET_CURRENT_USER_GEOLOCATION: \"UNSET_CURRENT_USER_GEOLOCATION\",\n\n    ADD_TO_WARNING_LIST: \"ADD_TO_WARNING_LIST\",\n    UNSET_WARNING_LIST: \"UNSET_WARNING_LIST\",\n\n    ADD_TO_ERROR_LIST: \"ADD_TO_ERROR_LIST\",\n    UNSET_ERROR_LIST: \"UNSET_ERROR_LIST\"\n}\n","import { combineReducers } from \"redux\"\nimport { StoreConstants as SC } from \"./StoreConstants\"\n\n/**\n * @param {object} state initial state\n * @param {object} action\n */\nconst _geolocationReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SC.SET_CURRENT_USER_GEOLOCATION:\n            return { ...state, ...action.payload }\n        case SC.UNSET_CURRENT_USER_GEOLOCATION:\n            return {}\n        default:\n            return state\n    }\n}\n\n/**\n * @param {array} state array of strings\n * @param {*} action \n */\nconst _warningsReducer = (state = [], action) => {\n    switch (action.type) {\n        case SC.ADD_TO_WARNING_LIST:\n            return [...state, ...action.payload]\n        case SC.UNSET_WARNING_LIST:\n            return []\n        default:\n            return state\n    }\n}\n/**\n * @param {array} state array of strings\n * @param {*} action \n */\nconst _errorsReducer = (state = [], action) => {\n    switch (action.type) {\n        case SC.ADD_TO_ERROR_LIST:\n            return [...state, action.payload]\n        case SC.UNSET_ERROR_LIST:\n            return []\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    currentUserGeolocation: _geolocationReducer,\n    warningList: _warningsReducer,\n    errorList: _errorsReducer\n})\n","import { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\n// import logger from \"redux-logger\"\nimport reducers from \"./Reducers\"\n\nconst initialState = {}\n/**\n * Honestly don't know the config for redux\n * Will have to read documentation\n */\n// const store = applyMiddleware(thunk, logger)(createStore)(reducers, initialState)\nconst store = applyMiddleware(thunk)(createStore)(reducers, initialState)\n\n// So store is accessible via browser console\nwindow.store = store\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const OWM_API_KEY_STR = \"OWM_API_KEY\"\nconst DEFAULT_UNITS_STR = \"DEFAULT_UNITS\"\nconst THEME_SETTING_STR = \"THEME_SETTING_STR\"\n\nconst baseAPIURL = \"https://api.openweathermap.org/\"\n\nexport { OWM_API_KEY_STR, DEFAULT_UNITS_STR, baseAPIURL, THEME_SETTING_STR }\n","import React, { useState } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport CloseIcon from \"@material-ui/icons/Close\"\n\nimport { OWM_API_KEY_STR } from \"../../config/config\"\nimport { useSnackbar } from \"notistack\"\nimport { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2)\n    },\n    closeButton: {\n        position: \"absolute\",\n        right: theme.spacing(1),\n        top: theme.spacing(1)\n    }\n}))\n\nconst AddAPIKeyModal = props => {\n    const classes = useStyles()\n    const {\n        _closeHandler,\n        // _toggleHandler,\n        isOpen\n    } = props\n    const [apiKey, setApiKey] = useState(\"\")\n    const { enqueueSnackbar } = useSnackbar()\n\n    const _setOWMAPIKey = () => {\n        if (!apiKey) {\n            enqueueSnackbar(\"Please enter your API key\", { variant: \"error\" })\n            return\n        }\n        localStorage.setItem(OWM_API_KEY_STR, apiKey)\n        window.location.reload()\n    }\n\n    const _setStateFromInput = event => {\n        const target = event.target\n        const value = target.type === \"checkbox\" ? target.checked : target.value\n        setApiKey(value)\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={isOpen}\n                onClose={_closeHandler}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle className={classes.root} id=\"alert-dialog-title\">\n                    {\"OpenWeatherMap API key\"}\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={_closeHandler}>\n                        <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <span>\n                            Don't have an API key? Head over to{\" \"}\n                            <a href=\"https://openweathermap.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                Open Weather Map\n                            </a>{\" \"}\n                            and create a free account\n                        </span>\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"api-key\"\n                        label=\"API Key\"\n                        // type=\"email\"\n                        fullWidth\n                        required\n                        onChange={_setStateFromInput}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={_setOWMAPIKey} color=\"primary\">\n                        Set API key\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default AddAPIKeyModal\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport CloseIcon from \"@material-ui/icons/Close\"\n\nimport { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2)\n    },\n    closeButton: {\n        position: \"absolute\",\n        right: theme.spacing(1),\n        top: theme.spacing(1)\n    }\n}))\n\nconst ConfirmModal = props => {\n    const classes = useStyles()\n    const { message, _closeHandler, _onDecide, isOpen } = props\n\n    const _handleAffirm = () => {\n        _onDecide(true)\n        _closeHandler()\n    }\n\n    const _handleDeny = () => {\n        _onDecide(false)\n        _closeHandler()\n    }\n\n    if (isOpen) {\n        return (\n            <>\n                <Dialog\n                    open={isOpen}\n                    onClose={_closeHandler}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle className={classes.root} id=\"alert-dialog-title\">\n                        {\"Openweathermap API key\"}\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={_closeHandler}>\n                        <CloseIcon />\n                    </IconButton>\n                        </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            <span>{message}</span>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button className=\"default-btn-solid danger\" onClick={_handleDeny}>\n                            Cancel\n                        </Button>\n                        <Button className=\"default-btn-solid success\" onClick={_handleAffirm}>\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        )\n    }\n\n    return <></>\n}\n\nexport default ConfirmModal\n","import moment from \"moment\"\n\nconst truncateString = (str, num = 10) => {\n    if (str.length <= num) return str\n    return str.slice(0, num) + \"...\"\n}\n\n/**\n * Convert 'thisSentence' to 'This sentence'\n * @param {string} str camel cased string to convert in to normal case with spacing\n */\nconst camelCaseToNormalCase = str => {\n    return str.replace(/([A-Z])/g, \" $1\").replace(/^./, str2 => str2.toUpperCase())\n}\n\n/**\n * Convert 'This sentence' to 'thisSentence'\n * @param {string} str\n */\nconst stringToCamelCase = str => {\n    if (!str) return null\n    str = str.toLowerCase().replace(/(?:(^.)|([-_\\s]+.))/g, function(match) {\n        return match.charAt(match.length - 1).toUpperCase()\n    })\n    return str.charAt(0).toLowerCase() + str.substring(1)\n}\n\n/**\n * Search recursively through a list of objects for objects that match keyword\n * @param {array} obj original array to search through\n * @param {string} key keyword to search for\n * @param {array} list new list to append results that match the keyword\n * @returns {array}\n */\nconst objectFindRecursive = (obj, key, list) => {\n    if (!obj) return []\n    if (Array.isArray(obj)) {\n        for (let i in obj) {\n            list = list.concat(objectFindRecursive(obj[i], key, []))\n        }\n        return list\n    }\n    if (obj[key]) list.push(obj[key])\n\n    if (typeof obj === \"object\" && obj !== null) {\n        const children = Object.keys(obj)\n        if (children.length > 0) {\n            for (let i in children) {\n                list = list.concat(objectFindRecursive(obj[children[i]], key, []))\n            }\n        }\n    }\n    return list\n}\n\n/**\n * @param {array} list array of weather objects from openweathermap API\n */\nconst _groupWeatherByDay = list => {\n    if (!list || !list.length) return []\n\n    const days = new Map() // Use Map to mantain insertion order of dates\n\n    /**\n     * Loop through the objects in the list,\n     * Convert the dt into dddd Do MMMM format (Wednesday 29th January)\n     * For every different [day], push the weather info\n     */\n    for (const weather of list) {\n        const day = moment(weather.dt * 1000).format(\"dddd Do MMMM\")\n        if (!days[day]) days[day] = []\n        days[day].push(weather)\n    }\n\n    return days\n}\n\nexport { truncateString, camelCaseToNormalCase, stringToCamelCase, objectFindRecursive, _groupWeatherByDay }\n","const routes = {\n    home: '/',\n    about: '/about',\n    builtWith: '/built-with',\n    contact: '/contact',\n}\n\nexport { routes }","import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\"\n// import Button from \"@material-ui/core/Button\"\nimport List from \"@material-ui/core/List\"\nimport Divider from \"@material-ui/core/Divider\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport Build from \"@material-ui/icons/Build\"\nimport Help from \"@material-ui/icons/Help\"\nimport VpnKey from \"@material-ui/icons/VpnKey\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\n// import InboxIcon from \"@material-ui/icons/MoveToInbox\"\n// import MailIcon from \"@material-ui/icons/Mail\"\n\nimport AddAPIKeyModal from \"../modals/AddAPIKeyModal\"\nimport ConfirmModal from \"../modals/ConfirmModal\"\n\nimport { OWM_API_KEY_STR } from \"../../config/config\"\nimport { truncateString } from \"../../utils/_helpers\"\nimport { routes } from \"../../router/routes\"\n\nconst useStyles = makeStyles({\n    list: {\n        width: 350\n    },\n    fullList: {\n        width: \"auto\"\n    }\n})\n\nconst apiKey = localStorage.getItem(OWM_API_KEY_STR) || \"\"\n\nconst ListItemLink = props => {\n    return <ListItem button component={Link} {...props} />\n}\n\nconst Drawer = props => {\n    const classes = useStyles()\n    const [isAddAPIKeyModalOpen, setIsAddAPIKeyModalOpen] = useState(false)\n    const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false)\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n\n    const _toggleDrawer = open => event => {\n        if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n            return\n        }\n\n        setIsDrawerOpen(open)\n    }\n\n    const _toggleAddAPIKeyModal = () => {\n        setIsAddAPIKeyModalOpen(!isAddAPIKeyModalOpen)\n    }\n\n    const _toggleConfirmModal = () => {\n        setIsConfirmModalOpen(!isConfirmModalOpen)\n    }\n\n    const _renderAPIKeyDrawerItem = () => {\n        if (apiKey) {\n            return (\n                <ListItem>\n                    <ListItemIcon>\n                        <VpnKey />\n                    </ListItemIcon>\n                    <ListItemText color=\"red\">API key: {truncateString(apiKey, 15)}</ListItemText>\n                    <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={_toggleConfirmModal}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )\n        }\n        return (\n            <ListItem\n                button\n                onClick={() => {\n                    _toggleAddAPIKeyModal()\n                    // _handleClose()\n                }}\n            >\n                <ListItemIcon>\n                    <VpnKey />\n                </ListItemIcon>\n                <ListItemText>Add API key</ListItemText>\n            </ListItem>\n        )\n    }\n\n    const _renderDrawerItems = () => (\n        <div\n            className={classes.list}\n            role=\"presentation\"\n            onClick={_toggleDrawer(false)}\n            onKeyDown={_toggleDrawer(false)}\n        >\n            <List>\n                <ListItemLink to={routes.about}>\n                    <ListItemIcon>\n                        <Help />\n                    </ListItemIcon>\n                    <ListItemText>About</ListItemText>\n                </ListItemLink>\n                <ListItemLink to={routes.builtWith}>\n                    <ListItemIcon>\n                        <Build />\n                    </ListItemIcon>\n                    <ListItemText>Built using</ListItemText>\n                </ListItemLink>\n            </List>\n            <Divider />\n            <List>{_renderAPIKeyDrawerItem()}</List>\n        </div>\n    )\n\n    return (\n        <>\n            <AddAPIKeyModal\n                isOpen={isAddAPIKeyModalOpen}\n                _closeHandler={() => {\n                    setIsAddAPIKeyModalOpen(false)\n                }}\n                _toggleHandler={_toggleAddAPIKeyModal}\n            />\n            <ConfirmModal\n                message={\"Are you sure you want to remove your API key?\"}\n                _closeHandler={() => {\n                    setIsConfirmModalOpen(false)\n                }}\n                _toggleHandler={_toggleConfirmModal}\n                _onDecide={isConfirmed => {\n                    if (isConfirmed) {\n                        localStorage.setItem(OWM_API_KEY_STR, \"\")\n                        window.location.reload()\n                    }\n                }}\n                isOpen={isConfirmModalOpen}\n            />\n            <MenuIcon onClick={_toggleDrawer(true)} />\n            <SwipeableDrawer\n                anchor=\"left\"\n                open={isDrawerOpen}\n                onClose={_toggleDrawer(false)}\n                onOpen={_toggleDrawer(true)}\n            >\n                {_renderDrawerItems()}\n            </SwipeableDrawer>\n        </>\n    )\n}\n\nexport default Drawer\n","import React from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\n\nimport Brightness6 from \"@material-ui/icons/Brightness6\"\n// import GitHub from \"@material-ui/icons/GitHub\"\n\nimport { Link as RouterLink } from \"react-router-dom\"\nimport Drawer from \"./Drawer\"\n\nimport { THEME_SETTING_STR } from \"../../config/config\"\n\nconst NavBarMaterial = () => {\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const themeSetting = localStorage.getItem(THEME_SETTING_STR) || \"\"\n\n    const _setTheme = () => {\n        themeSetting === \"light\"\n            ? localStorage.setItem(THEME_SETTING_STR, \"\")\n            : localStorage.setItem(THEME_SETTING_STR, \"light\")\n        window.location.reload()\n    }\n\n    return (\n        <div className={\"nav-bar\"}>\n            <AppBar position=\"static\" color=\"inherit\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={\"menu-button\"} color=\"inherit\" aria-label=\"menu\">\n                        <Drawer />\n                    </IconButton>\n\n                    <Typography variant=\"h6\" className={\"title\"}>\n                        <RouterLink to=\"/\">ReWeather</RouterLink>\n                    </Typography>\n\n                    <Tooltip title={themeSetting === \"light\" ? \"Switch to dark theme\" : \"Switch to light theme\"}>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={_setTheme}>\n                            <Brightness6 />\n                        </IconButton>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default NavBarMaterial\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core\"\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Container from \"@material-ui/core/Container\"\nimport Link from \"@material-ui/core/Link\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport GitHubIcon from \"@material-ui/icons/GitHub\"\n\nconst useStyles = makeStyles({\n    footer: {\n        bottom: 0,\n        position: \"absolute\",\n        width: \"100%\",\n        // minHeight: \"100px\",\n        backgroundColor: \"#424242\"\n        // paddingTop: \"10px\"\n    }\n})\n\nconst Footer = () => {\n    const classes = useStyles()\n    return (\n        <footer className={classes.footer}>\n            <Grid container>\n                <Grid item lg={4} className=\"\">\n                    {/* <Container>uwu</Container> */}\n                </Grid>\n                <Grid item lg={4} className=\"text-center\">\n                    <Container>\n                        <Link\n                            href=\"https://github.com/rjames1295/react-weather-app\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <Tooltip title={\"View the project on GitHub\"}>\n                                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                                    <GitHubIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    </Container>{\" \"}\n                </Grid>\n                <Grid item lg={4} className=\"\">\n                    {/* <Container>uwu</Container>{\" \"} */}\n                </Grid>\n            </Grid>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport { useLocation } from \"react-router-dom\"\n\nimport Button from \"@material-ui/core/Button\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport AddAPIKeyModal from \"../modals/AddAPIKeyModal\"\n\nimport { OWM_API_KEY_STR } from \"../../config/config\"\n\nconst mapStateToProps = state => ({\n    warningList: state.warningList || [],\n    errorList: state.errorList || []\n})\n\nconst Alerts = props => {\n    const { warningList, errorList } = props\n    const location = useLocation()\n    const apiKey = localStorage.getItem(OWM_API_KEY_STR) || \"\"\n\n    const [isAddAPIKeyModalOpen, setIsAddAPIKeyModalOpen] = useState(false)\n\n    return (\n        <>\n            <AddAPIKeyModal\n                isOpen={isAddAPIKeyModalOpen}\n                _closeHandler={() => {\n                    setIsAddAPIKeyModalOpen(false)\n                }}\n                _toggleHandler={() => {\n                    setIsAddAPIKeyModalOpen(!isAddAPIKeyModalOpen)\n                }}\n            />\n            <div className=\"pl-5 pr-5 pb-3 pt-3\">\n                {\n                    // Only show API key alert when on main page/landing page\n                location.pathname === '/' && !apiKey && (\n                    <Alert variant=\"filled\" severity=\"info\" className=\"mb-2\" action={\n                        <Button onClick={() => {\n                            setIsAddAPIKeyModalOpen(!isAddAPIKeyModalOpen)\n                        }}>\n                            Add API Key\n                        </Button>\n                    }>\n                        You will need to provide an API key before you can access weather info!\n\n                    </Alert>\n                )}\n                {warningList &&\n                    warningList.map((warning, index) => {\n                        const uniqKey = `alert-warning-${index}`\n                        return (\n                            <Alert variant=\"filled\" severity=\"warning\" className=\"mb-2\" key={uniqKey}>\n                                {String(warning)}\n                            </Alert>\n                        )\n                    })}\n\n                {errorList &&\n                    errorList.map((error, index) => {\n                        const uniqKey = `alert-error-${index}`\n                        return (\n                            <Alert variant=\"filled\" severity=\"error\" className=\"mb-2\" key={uniqKey} action={\n                                <Button>\n                                    Send an e-mail about this error\n                                </Button>\n                            }>\n                                {String(error)}\n                            </Alert>\n                        )\n                    })}\n            </div>\n        </>\n    )\n}\n\nexport default connect(mapStateToProps, \"\")(Alerts)\n","import { StoreConstants as SC } from \"./StoreConstants\"\n\n/**\n * @param {object} payload required fields {lat, lng}\n * @returns {object} fields {type, payload}\n */\nconst _actionSetCurrentUserGeolocation = payload => {\n    return {\n        type: SC.SET_CURRENT_USER_GEOLOCATION,\n        payload: payload\n    }\n}\n\n/**\n * @returns {object} fields {type}\n */\nconst _actionUnsetCurrentUserGeolocation = () => {\n    return {\n        type: SC.UNSET_CURRENT_USER_GEOLOCATION,\n        payload: {}\n    }\n}\n\n/**\n *\n */\nconst _actionAddToErrors = payload => {\n    return {\n        type: SC.ADD_TO_ERROR_LIST,\n        payload: payload\n    }\n}\n\nconst _actionUnsetErrors = () => {\n    return {\n        type: SC.UNSET_ERROR_LIST,\n        payload: []\n    }\n}\n\nexport { _actionSetCurrentUserGeolocation, _actionUnsetCurrentUserGeolocation, _actionAddToErrors, _actionUnsetErrors }\n","/**\n * Global axios config to intercept requests/response\n * and show toastrs on error\n */\n\nimport axios from \"axios\"\nimport { _actionAddToErrors } from \"../store/Actions\"\nimport store from \"../store/Store\"\n\nconst _axios = axios.create({})\n\n_axios.interceptors.request.use(\n    config => {\n        return config\n    },\n    err => {\n        if (err.message && !err.response.data) {\n            store.dispatch(_actionAddToErrors(err.message))\n        }\n\n        if (err.message && err.response && err.response.data && err.response.data.message) {\n            store.dispatch(_actionAddToErrors(`${err.message} : ${err.response.data.message}`))\n        }\n        \n        return Promise.reject(err)\n    }\n)\n\n_axios.interceptors.response.use(\n    response => {\n        return response\n    },\n    err => {\n        if (err.message && !err.response.data) {\n            store.dispatch(_actionAddToErrors(err.message))\n        }\n\n        if (err.message && err.response && err.response.data && err.response.data.message) {\n            store.dispatch(_actionAddToErrors(`${err.message} : ${err.response.data.message}`))\n        }\n        \n        return Promise.reject(err)\n    }\n)\n\nexport default _axios\n","import { useState, useEffect } from \"react\"\nimport axios from \"../api_service/_axios\"\n\nexport const useHttpGet = () => {\n    const [url, setUrl] = useState(null)\n    const [params, setParams] = useState({})\n\n    const [isLoading, setIsLoading] = useState(false)\n    const [fetchedData, setFetchedData] = useState(null)\n    const [responseCode, setResponseCode] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        const _fetchData = async () => {\n            setIsLoading(true)\n            let response = await axios.get(url, { params: { ...params } }).catch(err => {\n                console.error(\"wtfffff\", err)\n                setErrorMessage(err.message)\n                setResponseCode(err.status)\n                setIsLoading(false)\n            })\n\n            if (response) {\n                console.log(response)\n                setFetchedData(response.data)\n                setResponseCode(response.status)\n                setIsLoading(false)\n            }\n        }\n\n        if (url) {\n            console.log(\"SENDING HTTP REQUEST\")\n            _fetchData()\n        }\n    }, [url, params])\n\n    return [{ fetchedData, isLoading, errorMessage, responseCode }, setUrl, setParams]\n}\n","/**\n * Weather API provided by\n * https://openweathermap.org/\n *\n * Sample endpoint:\n *      api.openweathermap.org/data/2.5/weather?q={city name},{country code}\n *\n * Every endpoint must include APPID param\n * @param {string} OWMAPIKey &APPID=OWMAPIKey\n * @param {string} units optional param. enum [metric, imperial] defaults to Kelvin\n */\n\nimport { OWM_API_KEY_STR, DEFAULT_UNITS_STR, baseAPIURL } from \"../config/config\"\nconst OWMAPIKey = localStorage.getItem(OWM_API_KEY_STR) || \"\"\nconst defaultUnit = localStorage.getItem(DEFAULT_UNITS_STR) || \"metric\"\n\nexport const _weatherAPI = {\n    /**\n     * @param {string} cityName\n     * @param {string} countryCode\n     */\n    getCurrentWeatherByCityName: (cityName, countryCode) => {\n        if (!countryCode) return `${baseAPIURL}data/2.5/weather?q=${cityName}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n\n        return `${baseAPIURL}data/2.5/weather?q=${cityName},${countryCode}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n    },\n    /**\n     * @param {object} geolocation required fields {lat, lng}\n     */\n    getCurrentWeatherByGeolocation: (geolocation = {}) => {\n        return `${baseAPIURL}data/2.5/weather?lat=${geolocation.lat}&lon=${geolocation.lng}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n    },\n    /**\n     * @param {string} cityName\n     * @param {string} countryCode\n     */\n    getForecastedWeatherFiveDaysByCityName: (cityName, countryCode) => {\n        if (!countryCode) return `${baseAPIURL}data/2.5/forecast?q=${cityName}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n\n        return `${baseAPIURL}data/2.5/forecast?q=${cityName},${countryCode}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n    },\n    /**\n     * @param {object} geolocation required fields {lat, lng}\n     */\n    getForecastedWeatherFiveDaysByGeolocation: (geolocation = {}) => {\n        return `${baseAPIURL}data/2.5/forecast?lat=${geolocation.lat}&lon=${geolocation.lng}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n    }\n}\n","/**\n * General purpose component for recursively displaying JSON data where keys and values are dynamic\n */\n\nimport React, { useState } from \"react\"\nimport { camelCaseToNormalCase } from \"../../utils/_helpers\"\n\nconst ExpandableProperty = props => {\n    const [isOpen, setIsOpen] = useState(!!props.expanded)\n\n    return (\n        <>\n            <span\n                style={{\n                    cursor: \"pointer\",\n                    textStyle: \"underline\",\n                    color: \"blue\"\n                }}\n                onClick={() => {\n                    setIsOpen(!isOpen)\n                }}\n            >\n                {props.title}\n                {isOpen ? <span> v</span> : <span> ></span>}\n            </span>\n\n            {isOpen ? props.children : null}\n            {props.children.length === 0 && isOpen ? <i>Empty</i> : null}\n        </>\n    )\n}\n\nconst RecursiveData = props => {\n    return (\n            <div className=\"text-left p-l-15\">\n                {props.property !== null ? (\n                    <>\n                        {typeof props.property === \"number\" ||\n                        typeof props.property === \"string\" ||\n                        typeof props.property === \"boolean\" ? (\n                            <>\n                                {\" \"}\n                                <b>{camelCaseToNormalCase(props.propertyName)}</b> : {String(props.property)}{\" \"}\n                            </>\n                        ) : (\n                            <>\n                                <ExpandableProperty\n                                    title={camelCaseToNormalCase(props.propertyName)}\n                                    expanded={props.rootProperty}\n                                >\n                                    {Object.values(props.property).map((property, index, { length }) => {\n                                        return (\n                                            <RecursiveData\n                                                key={index}\n                                                property={property}\n                                                propertyName={Object.getOwnPropertyNames(props.property)[index]}\n                                                excludeBottomBorder={index === length - 1}\n                                            />\n                                        )\n                                    })}\n                                </ExpandableProperty>\n                            </>\n                        )}\n                    </>\n                ) : (\n                    <>\n                        {\" \"}\n                        <b>{camelCaseToNormalCase(props.propertyName)}</b> : {String(props.property)}{\" \"}\n                    </>\n                )}\n            </div>\n        )\n}\n\nexport default RecursiveData\n","import React, { useEffect } from \"react\"\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Grid from \"@material-ui/core/Grid\"\n\nimport { useHttpGet } from \"../../hooks/_useHttpGet\"\nimport { _weatherAPI } from \"../../api_service/weather\"\nimport { connect } from \"react-redux\"\nimport RecursiveData from \"../shared/RecursiveData\"\n// import WeatherCard from \"../shared/WeatherCard\"\n\n// import ErrorCard from \"../shared/ErrorCard\"\n\nconst mapStateToProps = state => ({\n    currentUserGeolocation: state.currentUserGeolocation\n})\n\nconst CurrentWeather = props => {\n    const { currentUserGeolocation } = props\n    const [\n        { fetchedData: currentWeatherInfo, isLoading: isWeatherInfoLoading, errMessage: currentWeatherErrMsg },\n        setUrl\n    ] = useHttpGet()\n\n    useEffect(() => {\n        // Fetch data when geolocation changes\n        const _fetchWeatherInfo = () => {\n            if (currentUserGeolocation && currentUserGeolocation.lat && currentUserGeolocation.lng) {\n                setUrl(_weatherAPI.getCurrentWeatherByGeolocation(currentUserGeolocation))\n            }\n        }\n\n        _fetchWeatherInfo()\n    }, [currentUserGeolocation, setUrl])\n\n    if (currentWeatherErrMsg) {\n        return <div className=\"text-center\">{String(currentWeatherErrMsg)}</div>\n    }\n\n    if (isWeatherInfoLoading) {\n        return (\n            <div className=\"text-center\">\n                <CircularProgress />\n            </div>\n        )\n    }\n\n    if (currentWeatherInfo) {\n        return (\n            <div className=\"text-center\">\n                <Grid container>\n                    <Grid item lg={2}></Grid>\n                    <Grid item lg={8}>\n                        Currently the weather info is\n                        <Card className={\"classes.card mb-3\"} key={\"_key\"}>\n                            <CardContent>\n                                <Typography className={\"classes.title\"} color=\"textSecondary\" gutterBottom id=\"current-weather-location-name\">\n                                    {currentWeatherInfo.name}\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    {currentWeatherInfo.name}\n                                </Typography>\n                                <Typography className={\"classes.pos\"} color=\"textSecondary\" id=\"current-weather-info-day\">\n                                    {currentWeatherInfo.day}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\">Learn More</Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                    <Grid item lg={2}></Grid>\n                </Grid>\n                <RecursiveData\n                    property={currentWeatherInfo}\n                    propertyName=\"Weather info\"\n                    excludeBottomBorder={false}\n                    rootProperty={true}\n                />\n            </div>\n        )\n    }\n\n    return <>{/* <ErrorCard message={\"Error loading current weather info\"} /> */}</>\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(\n    React.memo(CurrentWeather, (prevProps, nextProps) => {\n        return prevProps.currentUserGeolocation === nextProps.currentUserGeolocation\n    })\n)\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Grid from \"@material-ui/core/Grid\"\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 275\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\"\n    },\n    title: {\n        fontSize: 14\n    },\n    pos: {\n        marginBottom: 12\n    }\n})\n\nconst WeatherCard = props => {\n    const classes = useStyles()\n    // const bull = <span className={classes.bullet}>•</span>\n    const { weatherInfo = {}, _key, day } = props\n\n    // console.log(weatherInfo)\n\n    const _renderWeatherInfo = () => {\n        const { main = {} } = weatherInfo\n        return (\n            <Grid container spacing={3}>\n                <Grid item lg={4}>\n                    <div>Temperature:</div>\n                    <div>{main.temp}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Feels like:</div>\n                    <div>{main.feels_like}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Minimum temp:</div>\n                    <div>{main.temp_min}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Maximum temp:</div>\n                    <div>{main.temp_max}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Pressure:</div>\n                    <div>{main.pressure}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Humidity:</div>\n                    <div>{main.humidity}</div>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    return (\n        <Card className={classes.card + \" mb-3\"} key={_key}>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom id=\"weather-card-title\">\n                    {weatherInfo.name}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" id=\"weather-card-sub-title\">\n                    {weatherInfo.name}\n                    {/* be{bull}nev{bull}o{bull}lent */}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\" id=\"weather-card-day\">\n                    {day}\n                </Typography>\n                {/* <Typography variant=\"body2\" component=\"p\"> */}\n                {/* well meaning and kindly.\n                    <br />\n                    {'\"a benevolent smile\"'} */}\n                {_renderWeatherInfo()}\n                {/* </Typography> */}\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\">Learn More</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default WeatherCard\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\n\nimport { useHttpGet } from \"../../hooks/_useHttpGet\"\nimport { _weatherAPI } from \"../../api_service/weather\"\nimport { _groupWeatherByDay } from \"../../utils/_helpers\"\nimport RecursiveData from \"../shared/RecursiveData\"\nimport { Grid, Typography } from \"@material-ui/core\"\n\nimport WeatherCard from \"../shared/WeatherCard\"\n// import ErrorCard from \"../shared/ErrorCard\"\n\nconst mapStateToProps = state => ({\n    currentUserGeolocation: state.currentUserGeolocation\n})\n\nconst ForecastedWeatherFiveDays = props => {\n    const { currentUserGeolocation } = props\n    const [{ fetchedData: weatherResponse, isLoading, errorMessage }, setUrl] = useHttpGet()\n\n    useEffect(() => {\n        // Fetch data when geolocation changes\n        const _fetchForecastInfo = () => {\n            if (currentUserGeolocation && currentUserGeolocation.lat && currentUserGeolocation.lng) {\n                setUrl(_weatherAPI.getForecastedWeatherFiveDaysByGeolocation(currentUserGeolocation))\n            }\n        }\n\n        _fetchForecastInfo()\n    }, [currentUserGeolocation, setUrl])\n\n    if (errorMessage) {\n        return <div className=\"text-center\">{String(errorMessage)}</div>\n    }\n\n    if (isLoading) {\n        return <div className=\"text-center\"><CircularProgress /></div>\n    }\n\n    if (weatherResponse) {\n        if (weatherResponse.list) {\n            /**\n             * Segregate the forecast list by days\n             */\n            const groupedWeatherData = _groupWeatherByDay(weatherResponse.list)\n            const forecastWeatherCity = weatherResponse.city\n\n            return (\n                <div className=\"text-center\">\n                    <hr />\n                    <Typography variant=\"h5\" component=\"h2\">\n                        Forecasted weather for the next 5 days\n                    </Typography>\n                    <Grid container spacing={7}>\n                        {/**\n                         * Since groupedWeather data always returns and array with 5 objects,\n                         * Size the columns accordingly\n                         */\n                        Object.keys(groupedWeatherData).map((key, index) => {\n                            if (index > 0) {\n                                return (\n                                    <Grid item lg={4} md={4} sm={4} key={`gw-grid-${index}`}>\n                                        {groupedWeatherData[key].map((weatherInfo, _index) => {\n                                            const uniqKey = `w-card-${index}-${_index}`\n                                            return (\n                                                <WeatherCard day={key} weatherInfo={weatherInfo} _key={uniqKey} key={uniqKey} />\n                                            )\n                                        })}\n                                    </Grid>\n                                )\n                            }\n                            return <React.Fragment key={`gw-grid-${index}`}></React.Fragment>\n                        })}\n                    </Grid>\n                    {/* <RecursiveData\n                        property={groupedWeatherData}\n                        propertyName=\"Forecasted weather info\"\n                        excludeBottomBorder={false}\n                        rootProperty={true}\n                    /> */}\n                    <hr />\n                    <RecursiveData\n                        property={forecastWeatherCity}\n                        propertyName=\"Forecasted city info\"\n                        excludeBottomBorder={false}\n                        rootProperty={true}\n                    />\n                </div>\n            )\n        }\n    }\n\n    return <>{/* <ErrorCard message={\"Error loading forecast info\"} /> */}</>\n}\n\nexport default connect(mapStateToProps, null)(ForecastedWeatherFiveDays)\n","import React, { useEffect } from \"react\"\nimport { useSnackbar } from \"notistack\"\nimport { _getUserGeolocation } from \"../../utils/_geolocation\"\nimport { _actionSetCurrentUserGeolocation, _actionUnsetCurrentUserGeolocation } from \"../../store/Actions\"\nimport { connect } from \"react-redux\"\n\n\nimport CurrentWeather from \"../weather/CurrentWeather\"\nimport ForecastedWeatherFiveDays from \"../weather/ForecastedWeatherFiveDays\"\n\nconst mapStateToProps = state => ({\n    currentUserGeolocation: state.currentUserGeolocation\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setCurrentUserGeolocation(data) {\n        dispatch(_actionSetCurrentUserGeolocation(data))\n    },\n    unsetCurrentUserGeolocation(data) {\n        dispatch(_actionUnsetCurrentUserGeolocation(data))\n    }\n})\n\nconst WeatherContainer = props => {\n    const { setCurrentUserGeolocation, currentUserGeolocation } = props\n    const { enqueueSnackbar } = useSnackbar()\n\n    useEffect(() => {\n        const _fetchData = async () => {\n            let geolocation = await _getUserGeolocation().catch(err => {\n                console.error(err)\n                enqueueSnackbar(err.message, { variant: \"error\" })\n            })\n\n            geolocation\n                ? // Save the geolocation in redux\n                  setCurrentUserGeolocation(geolocation)\n                : enqueueSnackbar(\"Error retrieving current location\", { variant: \"error\" })\n        }\n\n        if (!currentUserGeolocation.lat || !currentUserGeolocation.lng) {\n            _fetchData()\n        }\n    }, [setCurrentUserGeolocation, enqueueSnackbar, currentUserGeolocation])\n\n    return (\n        <>\n            <CurrentWeather />\n            <ForecastedWeatherFiveDays />\n        </>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherContainer)\n","/**\n * @returns {object} with fields {lat, lng}\n */\nconst _getUserGeolocation = () => {\n    return new Promise((resolve, reject) => {\n        if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                position => {\n                    if (position.coords) {\n                        resolve({\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        })\n                    }\n                },\n                err => {\n                    console.error(err)\n                    reject(err)\n                }\n            )\n        } else {\n            reject(\"Your browser does not support geolocation\")\n        }\n    })\n}\n\n/**\n * @param {string} cityName name of city\n * @param {string} countryName name of country\n * @returns {}\n */\nconst _getUserGeolocationFromCity = (cityName, countryName) => {\n    return new Promise((resolve, reject) => {\n        resolve({})\n    })\n}\n\n/**\n * @param {number} zipCode zip code of area\n * @returns {}\n */\nconst _getUserGeolocationFromZipCode = zipCode => {\n    return new Promise((resolve, reject) => {\n        resolve({})\n    })\n}\n\nexport { _getUserGeolocation, _getUserGeolocationFromCity, _getUserGeolocationFromZipCode }\n","import React from \"react\"\nimport WeatherContainer from \"../components/landing_page/WeatherContainer\"\nimport Container from \"@material-ui/core/Container\"\nimport { OWM_API_KEY_STR } from \"../config/config\"\n\nconst LandingPage = props => {\n    const apiKey = localStorage.getItem(OWM_API_KEY_STR)\n    if (apiKey) {\n        return (\n            <Container>\n                <WeatherContainer {...props} />\n            </Container>\n        )\n    }\n\n    return <></>\n}\n\nexport default LandingPage\n","import React, { useEffect } from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport { useLocation } from \"react-router\"\n\nconst NotFound = props => {\n    const location = useLocation()\n\n    useEffect(() => {\n        document.body.classList.add(\"bg-sad-face\")\n\n        const cleanup = () => {\n            document.body.classList.remove(\"bg-sad-face\")\n        }\n        return cleanup\n    }, [location])\n\n    return (\n        <Container className=\"text-center bg-sad-face\">{`Couldn't find the page \"${location.pathname}\"`}</Container>\n    )\n}\n\nexport default NotFound\n","import React from \"react\"\nimport Container from \"@material-ui/core/Container\"\n\nconst AboutPage = props => {\n    return (\n        <Container>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec fringilla, turpis eu imperdiet tincidunt,\n            nunc enim rutrum lorem, ut condimentum tortor nisl fermentum augue. Nullam vulputate eu augue eget interdum.\n            Nulla facilisi. Nullam vel lectus rhoncus, congue tortor pellentesque, semper neque. Fusce a turpis luctus,\n            placerat lectus vehicula, viverra turpis. Proin magna velit, congue vel iaculis a, tincidunt sed magna.\n            Aliquam erat volutpat. Pellentesque id mauris fermentum, pretium augue vitae, semper enim. Quisque varius,\n            magna eget maximus suscipit, magna dui auctor dolor, ut blandit est eros vitae magna. Mauris suscipit\n            posuere odio, eu sodales dolor tempor rutrum. Aenean condimentum ultricies posuere. Morbi nec condimentum\n            tortor. Donec suscipit dui sit amet malesuada consequat. Mauris nulla ligula, egestas quis ultricies sed,\n            ultricies ac quam. Aenean placerat vulputate efficitur. Aliquam cursus urna elit, nec placerat diam\n            tristique id. Nulla non neque nunc. Quisque semper libero non magna iaculis sodales. Vivamus condimentum\n            lectus eget faucibus efficitur. Etiam sodales congue tortor. Interdum et malesuada fames ac ante ipsum\n            primis in faucibus. Vestibulum rutrum sodales orci ut ultrices. Cras et porta nibh. Cras efficitur nulla\n            elit. Nam sed velit purus. In vel eros in odio congue porta. Quisque tempor non mauris eu cursus. Sed\n            malesuada eu sapien in sagittis. Donec aliquet sodales rutrum. Praesent vitae mauris in diam imperdiet\n            cursus. Cras eget ipsum nunc. Suspendisse et egestas sapien. Aenean at ultrices nisl, eget bibendum justo.\n            Suspendisse eget tortor nec lorem hendrerit elementum vitae id magna. Aenean commodo sagittis neque. In hac\n            habitasse platea dictumst. Donec gravida dignissim tempor. Suspendisse dolor metus, ornare ac condimentum\n            id, pretium sit amet ante. Phasellus sodales, dui nec feugiat dignissim, nunc felis vulputate leo, eu tempus\n            nisl odio sed mi. Aenean aliquet lobortis libero in venenatis. Vivamus imperdiet, eros in scelerisque\n            scelerisque, lectus quam pellentesque ante, ac commodo eros ipsum at risus. In sed magna imperdiet, mattis\n            felis in, pulvinar erat. Praesent ac mattis lorem. Aenean non feugiat elit. Cras vulputate at ligula quis\n            elementum. Aenean a vestibulum augue, eu sollicitudin nisi. Donec eu odio ut elit consequat pellentesque.\n            Aenean at felis consequat, sollicitudin velit non, suscipit ipsum. Aenean quis libero justo. Nam facilisis\n            eleifend faucibus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n            himenaeos. Maecenas augue justo, convallis nec lacus a, faucibus mollis velit. Nam lobortis, justo suscipit\n            feugiat rhoncus, ligula diam aliquam lacus, vitae aliquam eros sapien ut nibh. Fusce auctor sagittis justo\n            vel placerat. Suspendisse eros orci, sodales eu odio nec, aliquam elementum ipsum. Suspendisse et sapien\n            vitae justo consequat iaculis. In dapibus arcu eget orci consequat sollicitudin. Vestibulum at augue diam.\n            Fusce nisi nibh, pellentesque eget scelerisque ut, volutpat quis dolor.\n        </Container>\n    )\n}\n\nexport default AboutPage\n","import React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport Typography from \"@material-ui/core/Typography\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Grid from \"@material-ui/core/Grid\"\n// import IconButton from \"@material-ui/core/IconButton\"\n\nimport ImageIcon from \"@material-ui/icons/Image\"\nimport CodeIcon from \"@material-ui/icons/Code\"\nimport CloudIcon from \"@material-ui/icons/Cloud\"\nimport StorageIcon from \"@material-ui/icons/Storage\"\nimport CallMadeIcon from \"@material-ui/icons/CallMade\"\n// import WorkIcon from \"@material-ui/icons/Work\"\n// import BeachAccessIcon from \"@material-ui/icons/BeachAccess\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: \"100%\"\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular\n    }\n}))\n\nconst ListItemLink = props => {\n    return <ListItem button component={\"a\"} {...props} />\n}\n\nconst frontendEndTechStackList = [\n    {\n        name: \"React\",\n        description: \"JavaScript framework\",\n        link: \"https://reactjs.org/\",\n        icon: <CodeIcon />\n    },\n    {\n        name: \"React Redux\",\n        description: \"Global data store\",\n        link: \"https://react-redux.js.org/\",\n        icon: <StorageIcon />\n    },\n    {\n        name: \"Material UI\",\n        description: \"UI Framework\",\n        link: \"https://material-ui.com/\",\n        icon: \"\"\n    }\n    // {\n    //     name: \"notistack\",\n    //     link: \"https://github.com/iamhosseindhv/notistack\"\n    // },\n    // {\n    //     name: \"Axios\",\n    //     link: \"https://github.com/axios/axios\"\n    // }\n]\n\nexport default function SimpleExpansionPanel() {\n    const classes = useStyles()\n\n    const [isFrontendPanelOpen, setIsFrontendPanelOpen] = useState(true)\n    const [isAPIPanelOpen, setIsAPIPanelOpen] = useState(false)\n\n    return (\n        <Container>\n            <div className={classes.root}>\n                <ExpansionPanel\n                    expanded={isFrontendPanelOpen}\n                    onChange={() => {\n                        setIsFrontendPanelOpen(!isFrontendPanelOpen)\n                    }}\n                >\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.heading}>Website</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Grid container>\n                            <Grid item lg={12}>\n                                <List className={classes.root}>\n                                    {frontendEndTechStackList.map((tech, index) => {\n                                        const uniqKey = `tech-stack-${index}`\n                                        return (\n                                            <ListItemLink\n                                                key={uniqKey}\n                                                href={tech.link}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer noopener\"\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar>{tech.icon ? tech.icon : <ImageIcon />}</Avatar>\n                                                </ListItemAvatar>\n                                                <ListItemText primary={tech.name} secondary={tech.description} />\n                                                <ListItemSecondaryAction className=\"cursor-pointer\">\n                                                    <a href={tech.link}>\n                                                        {/* <IconButton edge=\"end\" aria-label=\"delete\"> */}\n                                                        <CallMadeIcon />\n                                                        {/* </IconButton> */}\n                                                    </a>\n                                                </ListItemSecondaryAction>\n                                            </ListItemLink>\n                                        )\n                                    })}\n                                </List>\n                            </Grid>\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel\n                    expanded={isAPIPanelOpen}\n                    onChange={() => {\n                        setIsAPIPanelOpen(!isAPIPanelOpen)\n                    }}\n                >\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel2a-content\"\n                        id=\"panel2a-header\"\n                    >\n                        <Typography className={classes.heading}>APIs</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Grid container>\n                            <Grid item lg={12}>\n                                <List className={classes.root}>\n                                    <ListItemLink\n                                        href={\"https://openweathermap.org\"}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer noopener\"\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <CloudIcon />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText primary={\"OpenWeatherMap API\"} secondary={\"Weather API\"} />\n                                        <ListItemSecondaryAction className=\"cursor-pointer\">\n                                            <a href={\"owo\"}>\n                                                <CallMadeIcon />\n                                            </a>\n                                        </ListItemSecondaryAction>\n                                    </ListItemLink>\n                                </List>\n                            </Grid>\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        </Container>\n    )\n}\n","import React from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport LandingPage from \"../pages/LandingPage\"\nimport NotFoundPage from \"../pages/NotFoundPage\"\nimport AboutPage from \"../pages/AboutPage\"\nimport BuiltWithPage from \"../pages/BuiltWithPage\"\n\nimport { routes } from \"./routes\"\n\nconst Router = props => {\n    return (\n        <Switch>\n            {/* Landing page route */}\n            <Route exact path={routes.home} render={() => <LandingPage />} />\n\n            {/* About page route */}\n            <Route exact path={routes.about} component={AboutPage} />\n\n            {/* Built with page route */}\n            <Route exact path={routes.builtWith} component={BuiltWithPage} />\n\n            {/* 404 route */}\n            <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n    )\n}\n\nexport default Router\n","import React, { useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\"\nimport NavBarMaterial from \"./components/shared/NavBarMaterial\"\nimport Footer from \"./components/shared/Footer\"\nimport Alerts from \"./components/shared/Alerts\"\nimport Router from \"./router/router\"\n\nimport { usePrevious } from \"./hooks/_usePrevious\"\n\nimport store from \"./store/Store\"\nimport { _actionUnsetErrors } from \"./store/Actions\"\n\nconst App = () => {\n    const currentLocation = useLocation()\n    const prevLocation = usePrevious(currentLocation)\n\n    useEffect(() => {\n        const _onRouteChangeHandler = () => {\n            store.dispatch(_actionUnsetErrors())\n        }\n\n        if (prevLocation !== undefined && currentLocation.pathname !== prevLocation.pathname)\n            _onRouteChangeHandler()\n    }, [currentLocation, prevLocation])\n\n    return (\n        <div id=\"main-container\">\n            <NavBarMaterial />\n            <Alerts />\n            <Router />\n            <Footer />\n        </div>\n    )\n}\n\nexport default App\n","import { useEffect, useRef } from \"react\"\n\nexport const usePrevious = value => {\n    // console.log('useprev hook', value)\n    const ref = useRef()\n\n    useEffect(() => {\n        ref.current = value\n    })\n\n    return ref.current\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\"\nimport orange from \"@material-ui/core/colors/orange\"\n// import purple from \"@material-ui/core/colors/purple\"\nimport green from \"@material-ui/core/colors/green\"\n\nimport { THEME_SETTING_STR } from \"../config/config\"\nconst themeSetting = localStorage.getItem(THEME_SETTING_STR) || \"\"\nconst isLightTheme = themeSetting === \"light\" ? true : false\n\n\nconst darkTheme = {\n    palette: {\n        type: \"dark\",\n        primary: orange,\n        secondary: green,\n        text: {\n            primary: \"#fff\",\n            secondary: \"#fff !important\", //\"rgba(255, 255, 255, 0.7)\",\n            disabled: \"rgba(255, 255, 255, 0.5)\",\n            hint: \"rgba(255, 255, 255, 0.5)\",\n            icon: \"rgba(255, 255, 255, 0.5)\"\n        }\n    }\n}\n\nconst lightTheme = {\n    palette: {\n        type: \"light\"\n    }\n}\n\n// Dark theme by default\nconst materialTheme = isLightTheme ? createMuiTheme(lightTheme) : createMuiTheme(darkTheme)\n\nexport default materialTheme\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport { SnackbarProvider } from \"notistack\"\n\nimport { Provider } from \"react-redux\"\nimport store from \"./store/Store\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nimport App from \"./App\"\n\nimport materialTheme from \"./assets/material-theme\"\n\n// Start CSS imports\nimport \"./assets/main.scss\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\n\nReactDOM.render(\n    <ThemeProvider theme={materialTheme}>\n        <CssBaseline />\n        <Provider store={store}>\n            <BrowserRouter basename={'/react-weather-app'}>\n                <SnackbarProvider maxSnack={5}>\n                    <App />\n                </SnackbarProvider>\n            </BrowserRouter>\n        </Provider>\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}