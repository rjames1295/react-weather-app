{"version":3,"sources":["store/StoreConstants.js","store/Actions.js","store/Reducers.js","store/Store.js","api_service/_axios.js","hooks/_http.js","config/config.js","api_service/weather.js","components/shared/WeatherCard.js","components/weather/CurrentWeather.js","utils/_helpers.js","components/shared/RecursiveData.js","components/weather/ForecastedWeatherFiveDays.js","components/landing_page/LandingPageMain.js","utils/_geolocation.js","pages/LandingPage.js","pages/NotFoundPage.js","pages/AboutPage.js","router/routes.js","router/router.js","serviceWorker.js","components/modals/AddAPIKeyModal.js","components/modals/ConfirmModal.js","components/shared/Drawer.js","components/shared/NavBarMaterial.js","components/shared/Footer.js","components/shared/Alerts.js","assets/material-theme.js","index.js"],"names":["StoreConstants","_actionAddToErrors","payload","type","SC","combineReducers","currentUserGeolocation","state","action","warningList","errorList","store","applyMiddleware","thunk","logger","createStore","reducers","window","_axios","axios","create","interceptors","request","use","config","err","message","response","data","dispatch","Promise","reject","useHttpGet","useState","url","setUrl","params","setParams","isLoading","setIsLoading","fetchedData","setFetchedData","responseCode","setResponseCode","errorMessage","setErrorMessage","useEffect","console","log","a","async","get","catch","error","status","_fetchData","baseAPIURL","OWMAPIKey","localStorage","getItem","defaultUnit","_weatherAPI","geolocation","lat","lng","useStyles","makeStyles","card","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","WeatherCard","props","classes","weatherInfo","_key","Card","className","key","CardContent","Typography","color","gutterBottom","name","variant","component","main","Grid","container","spacing","item","lg","temp","feels_like","temp_min","temp_max","pressure","humidity","_renderWeatherInfo","CardActions","Button","size","connect","React","memo","currentWeatherInfo","isWeatherInfoLoading","currentWeatherErrMsg","errMessage","String","prevProps","nextProps","camelCaseToNormalCase","str","replace","str2","toUpperCase","ExpandableProperty","expanded","isOpen","setIsOpen","style","cursor","textStyle","onClick","children","length","RecursiveData","property","propertyName","rootProperty","Object","values","map","index","getOwnPropertyNames","excludeBottomBorder","weatherResponse","list","groupedWeatherData","days","Map","weather","day","moment","dt","format","push","_groupWeatherByDay","forecastWeatherCity","city","keys","md","sm","_index","uniqKey","Fragment","setCurrentUserGeolocation","unsetCurrentUserGeolocation","enqueueSnackbar","useSnackbar","resolve","navigator","getCurrentPosition","position","coords","latitude","longitude","withRouter","Container","location","pathname","routes","Router","exact","path","render","AboutPage","NotFoundPage","Boolean","hostname","match","AddAPIKeyModal","_closeHandler","apiKey","setApiKey","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","href","target","rel","TextField","autoFocus","label","fullWidth","required","onChange","event","value","checked","DialogActions","setItem","reload","ConfirmModal","_onDecide","width","fullList","isAddAPIKeyModalOpen","setIsAddAPIKeyModalOpen","isConfirmModalOpen","setIsConfirmModalOpen","isDrawerOpen","setIsDrawerOpen","_toggleDrawer","_toggleAddAPIKeyModal","_toggleConfirmModal","_toggleHandler","isConfirmed","SwipeableDrawer","onOpen","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","to","num","slice","truncateString","Divider","primary","NavBarMaterial","themeSetting","AppBar","Toolbar","IconButton","edge","aria-label","Footer","Alert","severity","warning","isLightTheme","darkTheme","palette","orange","secondary","green","text","disabled","hint","icon","materialTheme","createMuiTheme","ReactDOM","ThemeProvider","theme","CssBaseline","maxSnack","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d5db25f.chunk.js","sourcesContent":["export const StoreConstants = {\n    SET_CURRENT_USER_GEOLOCATION: \"SET_CURRENT_USER_GEOLOCATION\",\n    UNSET_CURRENT_USER_GEOLOCATION: \"UNSET_CURRENT_USER_GEOLOCATION\",\n\n    ADD_TO_WARNING_LIST: \"ADD_TO_WARNING_LIST\",\n    UNSET_WARNING_LIST: \"UNSET_WARNING_LIST\",\n\n    ADD_TO_ERROR_LIST: \"ADD_TO_ERROR_LIST\",\n    UNSET_ERROR_LIST: \"UNSET_ERROR_LIST\"\n}\n","import { StoreConstants as SC } from \"./StoreConstants\"\n\n/**\n * @param {object} payload required fields {lat, lng}\n * @returns {object} fields {type, payload}\n */\nconst _actionSetCurrentUserGeolocation = payload => {\n    return {\n        type: SC.SET_CURRENT_USER_GEOLOCATION,\n        payload: payload\n    }\n}\n\n/**\n * @returns {object} fields {type}\n */\nconst _actionUnsetCurrentUserGeolocation = () => {\n    return {\n        type: SC.UNSET_CURRENT_USER_GEOLOCATION,\n        payload: null\n    }\n}\n\n/**\n *\n */\nconst _actionAddToErrors = payload => {\n    return {\n        type: SC.ADD_TO_ERROR_LIST,\n        payload: payload\n    }\n}\n\nconst _actionUnsetErrors = () => {\n    return {\n        type: SC.UNSET_ERROR_LIST,\n        payload: null\n    }\n}\n\nexport { _actionSetCurrentUserGeolocation, _actionUnsetCurrentUserGeolocation, _actionAddToErrors, _actionUnsetErrors }\n","import { combineReducers } from \"redux\"\nimport { StoreConstants as SC } from \"./StoreConstants\"\n\n/**\n * @param {object} state initial state\n * @param {object} action\n */\nconst _geolocationReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SC.SET_CURRENT_USER_GEOLOCATION:\n            return { ...state, ...action.payload }\n        case SC.UNSET_CURRENT_USER_GEOLOCATION:\n            return {}\n        default:\n            return state\n    }\n}\n\n/**\n * @param {array} state array of strings\n * @param {*} action \n */\nconst _warningsReducer = (state = [], action) => {\n    switch (action.type) {\n        case SC.ADD_TO_WARNING_LIST:\n            return [...state, ...action.payload]\n        case SC.UNSET_WARNING_LIST:\n            return []\n        default:\n            return state\n    }\n}\n/**\n * @param {array} state array of strings\n * @param {*} action \n */\nconst _errorsReducer = (state = [], action) => {\n    switch (action.type) {\n        case SC.ADD_TO_ERROR_LIST:\n            return [...state, action.payload]\n        case SC.UNSET_ERROR_LIST:\n            return []\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    currentUserGeolocation: _geolocationReducer,\n    warningList: _warningsReducer,\n    errorList: _errorsReducer\n})\n","import { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport logger from \"redux-logger\"\nimport reducers from \"./Reducers\"\n\nconst initialState = {}\n/**\n * Honestly don't know the config for redux\n * Will have to read documentation\n */\nconst store = applyMiddleware(thunk, logger)(createStore)(reducers, initialState)\n\n// So store is accessible via browser console\nwindow.store = store\n\nexport default store\n","/**\n * Global axios config to intercept requests/response\n * and show toastrs on error\n */\n\nimport axios from \"axios\"\nimport { _actionAddToErrors } from \"../store/Actions\"\nimport store from \"../store/Store\"\n\nconst _axios = axios.create({})\n\n_axios.interceptors.request.use(\n    config => {\n        return config\n    },\n    err => {\n        if (err.message && !err.response.data) {\n            store.dispatch(_actionAddToErrors(err.message))\n        }\n\n        if (err.message && err.response && err.response.data && err.response.data.message) {\n            store.dispatch(_actionAddToErrors(`${err.message} ${err.response.data.message}`))\n        }\n        \n        return Promise.reject(err)\n    }\n)\n\n_axios.interceptors.response.use(\n    response => {\n        return response\n    },\n    err => {\n        if (err.message && !err.response.data) {\n            store.dispatch(_actionAddToErrors(err.message))\n        }\n\n        if (err.message && err.response && err.response.data && err.response.data.message) {\n            store.dispatch(_actionAddToErrors(`${err.message} ${err.response.data.message}`))\n        }\n        \n        return Promise.reject(err)\n    }\n)\n\nexport default _axios\n","import { useState, useEffect } from \"react\"\nimport axios from \"../api_service/_axios\"\n\nexport const useHttpGet = () => {\n    const [url, setUrl] = useState(null)\n    const [params, setParams] = useState({})\n\n    const [isLoading, setIsLoading] = useState(false)\n    const [fetchedData, setFetchedData] = useState(null)\n    const [responseCode, setResponseCode] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        const _fetchData = async () => {\n            setIsLoading(true)\n            let response = await axios.get(url, { params: { ...params } }).catch(err => {\n                console.error(\"wtfffff\", err)\n                setErrorMessage(err.message)\n                setResponseCode(err.status)\n                setIsLoading(false)\n            })\n            if (response) {\n                console.log(response)\n                setFetchedData(response.data)\n                setResponseCode(response.status)\n                setIsLoading(false)\n            } else {\n                setErrorMessage(\"No response received\")\n                setIsLoading(false)\n            }\n        }\n\n        if (url) {\n            console.log(\"SENDING HTTP REQUEST\")\n            _fetchData()\n        }\n    }, [url, params])\n\n    return [{ fetchedData, isLoading, errorMessage, responseCode }, setUrl, setParams]\n}\n","const OWM_API_KEY_STR = \"OWM_API_KEY\"\nconst DEFAULT_UNITS_STR = \"DEFAULT_UNITS\"\nconst THEME_SETTING_STR = \"THEME_SETTING_STR\"\n\nconst baseAPIURL = \"https://api.openweathermap.org/\"\n\nexport { OWM_API_KEY_STR, DEFAULT_UNITS_STR, baseAPIURL, THEME_SETTING_STR }\n","/**\n * Weather API provided by\n * https://openweathermap.org/\n *\n * Sample endpoint:\n *      api.openweathermap.org/data/2.5/weather?q={city name},{country code}\n *\n * Every endpoint must include APPID param\n * @param {string} OWMAPIKey &APPID=OWMAPIKey\n * @param {string} units optional param. enum [metric, imperial] defaults to Kelvin\n */\n\nimport { OWM_API_KEY_STR, DEFAULT_UNITS_STR, baseAPIURL } from \"../config/config\"\nconst OWMAPIKey = localStorage.getItem(OWM_API_KEY_STR) || \"\"\nconst defaultUnit = localStorage.getItem(DEFAULT_UNITS_STR) || \"metric\"\n\nexport const _weatherAPI = {\n    /**\n     * @param {string} cityName\n     * @param {string} countryCode\n     */\n    getCurrentWeatherByCityName: (cityName, countryCode) => {\n        if (!countryCode) return `${baseAPIURL}data/2.5/weather?q=${cityName}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n\n        return `${baseAPIURL}data/2.5/weather?q=${cityName},${countryCode}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n    },\n    /**\n     * @param {object} geolocation required fields {lat, lng}\n     */\n    getCurrentWeatherByGeolocation: (geolocation = {}) => {\n        return `${baseAPIURL}data/2.5/weather?lat=${geolocation.lat}&lon=${geolocation.lng}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n    },\n    /**\n     * @param {string} cityName\n     * @param {string} countryCode\n     */\n    getForecastedWeatherFiveDaysByCityName: (cityName, countryCode) => {\n        if (!countryCode) return `${baseAPIURL}data/2.5/forecast?q=${cityName}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n\n        return `${baseAPIURL}data/2.5/forecast?q=${cityName},${countryCode}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n    },\n    /**\n     * @param {object} geolocation required fields {lat, lng}\n     */\n    getForecastedWeatherFiveDaysByGeolocation: (geolocation = {}) => {\n        return `${baseAPIURL}data/2.5/forecast?lat=${geolocation.lat}&lon=${geolocation.lng}&units=${defaultUnit}&APPID=${OWMAPIKey}`\n    }\n}\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Grid from \"@material-ui/core/Grid\"\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 275\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\"\n    },\n    title: {\n        fontSize: 14\n    },\n    pos: {\n        marginBottom: 12\n    }\n})\n\nconst WeatherCard = props => {\n    const classes = useStyles()\n    // const bull = <span className={classes.bullet}>•</span>\n    const { weatherInfo = {}, _key } = props\n\n    // console.log(weatherInfo)\n\n    const _renderWeatherInfo = () => {\n        const { main = {} } = weatherInfo\n        return (\n            <Grid container spacing={3}>\n                <Grid item lg={4}>\n                    <div>Temperature:</div>\n                    <div>{main.temp}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Feels like:</div>\n                    <div>{main.feels_like}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Minimum temp:</div>\n                    <div>{main.temp_min}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Maximum temp:</div>\n                    <div>{main.temp_max}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Pressure:</div>\n                    <div>{main.pressure}</div>\n                </Grid>\n                <Grid item lg={4}>\n                    <div>Humidity:</div>\n                    <div>{main.humidity}</div>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    return (\n        <Card className={classes.card + \" mb-3\"} key={_key}>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {weatherInfo.name}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {weatherInfo.name}\n                    {/* be{bull}nev{bull}o{bull}lent */}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    adjective\n                </Typography>\n                {/* <Typography variant=\"body2\" component=\"p\"> */}\n                {/* well meaning and kindly.\n                    <br />\n                    {'\"a benevolent smile\"'} */}\n                {_renderWeatherInfo()}\n                {/* </Typography> */}\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\">Learn More</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default WeatherCard\n","import React, { useEffect } from \"react\"\nimport { useHttpGet } from \"../../hooks/_http\"\nimport { _weatherAPI } from \"../../api_service/weather\"\nimport { connect } from \"react-redux\"\n// import RecursiveData from \"../shared/RecursiveData\"\nimport WeatherCard from \"../shared/WeatherCard\"\n// import ErrorCard from \"../shared/ErrorCard\"\n\nconst mapStateToProps = state => ({\n    currentUserGeolocation: state.currentUserGeolocation\n})\n\nconst CurrentWeather = props => {\n    const { currentUserGeolocation } = props\n    const [\n        { fetchedData: currentWeatherInfo, isLoading: isWeatherInfoLoading, errMessage: currentWeatherErrMsg },\n        setUrl\n    ] = useHttpGet()\n\n    useEffect(() => {\n        // Fetch data when geolocation changes\n        const _fetchWeatherInfo = () => {\n            if (currentUserGeolocation && currentUserGeolocation.lat && currentUserGeolocation.lng) {\n                setUrl(_weatherAPI.getCurrentWeatherByGeolocation(currentUserGeolocation))\n            }\n        }\n\n        _fetchWeatherInfo()\n    }, [currentUserGeolocation, setUrl])\n\n    if (currentWeatherErrMsg) {\n        return <>{String(currentWeatherErrMsg)}</>\n    }\n\n    if (isWeatherInfoLoading) {\n        return <> Loading... </>\n    }\n\n    if (currentWeatherInfo) {\n        return (\n            <div className=\"text-center\">\n                Currently the weather info is\n                <WeatherCard weatherInfo={currentWeatherInfo} _key={\"w-card\"} />\n                {/* <RecursiveData\n                    property={currentWeatherInfo}\n                    propertyName=\"Weather info\"\n                    excludeBottomBorder={false}\n                    rootProperty={true}\n                /> */}\n            </div>\n        )\n    }\n\n    return (\n        <>\n            {/* <ErrorCard message={\"Error loading current weather info\"} /> */}\n        </>\n    )\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(\n    React.memo(CurrentWeather, (prevProps, nextProps) => {\n        return prevProps.currentUserGeolocation === nextProps.currentUserGeolocation\n    })\n)\n","import moment from \"moment\"\n\nconst truncateString = (str, num = 10) => {\n    if (str.length <= num) return str\n    return str.slice(0, num) + \"...\"\n}\n\n/**\n * Convert 'thisSentence' to 'This sentence'\n * @param {string} str camel cased string to convert in to normal case with spacing\n */\nconst camelCaseToNormalCase = str => {\n    return str.replace(/([A-Z])/g, \" $1\").replace(/^./, str2 => str2.toUpperCase())\n}\n\n/**\n * Convert 'This sentence' to 'thisSentence'\n * @param {string} str\n */\nconst stringToCamelCase = str => {\n    if (!str) return null\n    str = str.toLowerCase().replace(/(?:(^.)|([-_\\s]+.))/g, function(match) {\n        return match.charAt(match.length - 1).toUpperCase()\n    })\n    return str.charAt(0).toLowerCase() + str.substring(1)\n}\n\n/**\n * Search recursively through a list of objects for objects that match keyword\n * @param {array} obj original array to search through\n * @param {string} key keyword to search for\n * @param {array} list new list to append results that match the keyword\n * @returns {array}\n */\nconst objectFindRecursive = (obj, key, list) => {\n    if (!obj) return []\n    if (Array.isArray(obj)) {\n        for (let i in obj) {\n            list = list.concat(objectFindRecursive(obj[i], key, []))\n        }\n        return list\n    }\n    if (obj[key]) list.push(obj[key])\n\n    if (typeof obj === \"object\" && obj !== null) {\n        const children = Object.keys(obj)\n        if (children.length > 0) {\n            for (let i in children) {\n                list = list.concat(objectFindRecursive(obj[children[i]], key, []))\n            }\n        }\n    }\n    return list\n}\n\n/**\n * @param {array} list array of weather objects from openweathermap API\n */\nconst _groupWeatherByDay = list => {\n    if (!list || !list.length) return []\n\n    const days = new Map() // Use Map to mantain insertion order of dates\n\n    /**\n     * Loop through the objects in the list,\n     * Convert the dt into dddd Do MMMM format (Wednesday 29th January)\n     * For every different [day], push the weather info\n     */\n    for (const weather of list) {\n        const day = moment(weather.dt * 1000).format(\"dddd Do MMMM\")\n        if (!days[day]) days[day] = []\n        days[day].push(weather)\n    }\n\n    return days\n}\n\nexport { truncateString, camelCaseToNormalCase, stringToCamelCase, objectFindRecursive, _groupWeatherByDay }\n","/**\n * General purpose component for recursively displaying JSON data where keys and values are dynamic\n */\n\nimport React, { useState } from \"react\"\nimport { camelCaseToNormalCase } from \"../../utils/_helpers\"\n\nconst ExpandableProperty = props => {\n    const [isOpen, setIsOpen] = useState(!!props.expanded)\n\n    return (\n        <>\n            <span\n                style={{\n                    cursor: \"pointer\",\n                    textStyle: \"underline\",\n                    color: \"blue\"\n                }}\n                onClick={() => {\n                    setIsOpen(!isOpen)\n                }}\n            >\n                {props.title}\n                {isOpen ? <span> v</span> : <span> ></span>}\n            </span>\n\n            {isOpen ? props.children : null}\n            {props.children.length === 0 && isOpen ? <i>Empty</i> : null}\n        </>\n    )\n}\n\nconst RecursiveData = props => {\n    return (\n            <div className=\"text-left p-l-15\">\n                {props.property !== null ? (\n                    <>\n                        {typeof props.property === \"number\" ||\n                        typeof props.property === \"string\" ||\n                        typeof props.property === \"boolean\" ? (\n                            <>\n                                {\" \"}\n                                <b>{camelCaseToNormalCase(props.propertyName)}</b> : {String(props.property)}{\" \"}\n                            </>\n                        ) : (\n                            <>\n                                <ExpandableProperty\n                                    title={camelCaseToNormalCase(props.propertyName)}\n                                    expanded={props.rootProperty}\n                                >\n                                    {Object.values(props.property).map((property, index, { length }) => {\n                                        return (\n                                            <RecursiveData\n                                                key={index}\n                                                property={property}\n                                                propertyName={Object.getOwnPropertyNames(props.property)[index]}\n                                                excludeBottomBorder={index === length - 1}\n                                            />\n                                        )\n                                    })}\n                                </ExpandableProperty>\n                            </>\n                        )}\n                    </>\n                ) : (\n                    <>\n                        {\" \"}\n                        <b>{camelCaseToNormalCase(props.propertyName)}</b> : {String(props.property)}{\" \"}\n                    </>\n                )}\n            </div>\n        )\n}\n\nexport default RecursiveData\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport WeatherCard from \"../shared/WeatherCard\"\n// import ErrorCard from \"../shared/ErrorCard\"\nimport { useHttpGet } from \"../../hooks/_http\"\nimport { _weatherAPI } from \"../../api_service/weather\"\nimport { _groupWeatherByDay } from \"../../utils/_helpers\"\nimport RecursiveData from \"../shared/RecursiveData\"\nimport { Grid, Typography } from \"@material-ui/core\"\n\nconst mapStateToProps = state => ({\n    currentUserGeolocation: state.currentUserGeolocation\n})\n\nconst ForecastedWeatherFiveDays = props => {\n    const { currentUserGeolocation } = props\n    const [{ fetchedData: weatherResponse, isLoading, errorMessage }, setUrl] = useHttpGet()\n\n    useEffect(() => {\n        // Fetch data when geolocation changes\n        const _fetchForecastInfo = () => {\n            if (currentUserGeolocation && currentUserGeolocation.lat && currentUserGeolocation.lng) {\n                setUrl(_weatherAPI.getForecastedWeatherFiveDaysByGeolocation(currentUserGeolocation))\n            }\n        }\n\n        _fetchForecastInfo()\n    }, [currentUserGeolocation, setUrl])\n\n    if (errorMessage) {\n        return <>{String(errorMessage)}</>\n    }\n\n    if (isLoading) {\n        return <> Loading... </>\n    }\n\n    if (weatherResponse) {\n        if (weatherResponse.list) {\n            /**\n             * Segregate the forecast list by days\n             */\n            const groupedWeatherData = _groupWeatherByDay(weatherResponse.list)\n            const forecastWeatherCity = weatherResponse.city\n            // console.log(Object.keys(groupedWeatherData))\n            // setForecastWeatherCity(weatherResponse.city)\n\n            // for (let key of Object.keys(groupedWeatherData)) {\n            //     console.log(groupedWeatherData[key])\n            // }\n\n            return (\n                <div className=\"text-center\">\n                    <hr />\n                    <Typography variant=\"h5\" component=\"h2\">\n                        Forecasted weather for the next 5 days\n                    </Typography>\n                    <Grid container spacing={7}>\n                        {/**\n                         * Since groupedWeather data always returns and array with 5 objects,\n                         * Size the columns accordingly\n                         */\n                        Object.keys(groupedWeatherData).map((key, index) => {\n                            if (index > 0) {\n                                return (\n                                    <Grid item lg={4} md={4} sm={4} key={`gw-grid-${index}`}>\n                                        {groupedWeatherData[key].map((weatherInfo, _index) => {\n                                            const uniqKey = `w-card-${index}-${_index}`\n                                            return (\n                                                <WeatherCard weatherInfo={weatherInfo} _key={uniqKey} key={uniqKey} />\n                                            )\n                                        })}\n                                    </Grid>\n                                )\n                            }\n                            return <React.Fragment key={`gw-grid-${index}`}></React.Fragment>\n                        })}\n                    </Grid>\n                    {/* <RecursiveData\n                        property={groupedWeatherData}\n                        propertyName=\"Forecasted weather info\"\n                        excludeBottomBorder={false}\n                        rootProperty={true}\n                    /> */}\n                    <hr />\n                    <RecursiveData\n                        property={forecastWeatherCity}\n                        propertyName=\"Forecasted city info\"\n                        excludeBottomBorder={false}\n                        rootProperty={true}\n                    />\n                </div>\n            )\n        }\n    }\n\n    return <>{/* <ErrorCard message={\"Error loading forecast info\"} /> */}</>\n}\n\nexport default connect(mapStateToProps, null)(ForecastedWeatherFiveDays)\n","import React, { useEffect } from \"react\"\nimport { useSnackbar } from \"notistack\"\nimport { _getUserGeolocation } from \"../../utils/_geolocation\"\nimport { _actionSetCurrentUserGeolocation, _actionUnsetCurrentUserGeolocation } from \"../../store/Actions\"\nimport { connect } from \"react-redux\"\n\nimport CurrentWeather from \"../weather/CurrentWeather\"\nimport ForecastedWeatherFiveDays from \"../weather/ForecastedWeatherFiveDays\"\n\nconst mapStateToProps = state => ({\n    currentUserGeolocation: state.currentUserGeolocation\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setCurrentUserGeolocation(data) {\n        dispatch(_actionSetCurrentUserGeolocation(data))\n    },\n    unsetCurrentUserGeolocation(data) {\n        dispatch(_actionUnsetCurrentUserGeolocation(data))\n    }\n})\n\nconst LandingPageMain = props => {\n    const { setCurrentUserGeolocation } = props\n    const { enqueueSnackbar } = useSnackbar()\n\n    useEffect(() => {\n        const _fetchData = async () => {\n            let geolocation = await _getUserGeolocation().catch(err => {\n                /**\n                 * No need to show the toastr in the catch block, since axios interceptor\n                 * is configured to show a toastr on error\n                 */\n                console.error(err)\n            })\n\n            geolocation\n                ? // Save the geolocation in redux\n                  setCurrentUserGeolocation(geolocation)\n                : enqueueSnackbar(\"Error retrieving current location\", { variant: \"error\" })\n        }\n\n        _fetchData()\n    }, [setCurrentUserGeolocation, enqueueSnackbar])\n\n    return (\n        <>\n            <CurrentWeather />\n            <ForecastedWeatherFiveDays />\n        </>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPageMain)\n","/**\n * @returns {object} with fields {lat, lng}\n */\nconst _getUserGeolocation = () => {\n    return new Promise((resolve, reject) => {\n        if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                position => {\n                    if (position.coords) {\n                        resolve({\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        })\n                    }\n                },\n                err => {\n                    console.error(err)\n                    reject(err)\n                }\n            )\n        } else {\n            reject(\"Your browser does not support geolocation\")\n        }\n    })\n}\n\n/**\n * @param {string} cityName name of city\n * @param {string} countryName name of country\n * @returns {}\n */\nconst _getUserGeolocationFromCity = (cityName, countryName) => {\n    return new Promise((resolve, reject) => {\n        resolve({})\n    })\n}\n\n/**\n * @param {number} zipCode zip code of area\n * @returns {}\n */\nconst _getUserGeolocationFromZipCode = zipCode => {\n    return new Promise((resolve, reject) => {\n        resolve({})\n    })\n}\n\nexport { _getUserGeolocation, _getUserGeolocationFromCity, _getUserGeolocationFromZipCode }\n","import React from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport LandingPageMain from \"../components/landing_page/LandingPageMain\"\nimport Container from \"@material-ui/core/Container\"\nimport { OWM_API_KEY_STR } from \"../config/config\"\n\nconst LandingPage = props => {\n    const apiKey = localStorage.getItem(OWM_API_KEY_STR)\n    if (apiKey) {\n        return (\n            <Container>\n                <LandingPageMain {...props} />\n            </Container>\n        )\n    }\n\n    return <></>\n}\n\n/**\n * Exporting using withRouter() allows the component\n * to receive router props\n * @param {object} history\n * @param {object} location\n * @param {object} match\n */\nexport default withRouter(LandingPage)\n","import React from \"react\"\nimport { withRouter } from \"react-router-dom\"\n\nconst NotFound = props => {\n    console.log(props)\n    const {\n        // history,\n        location\n        // match\n    } = props\n    return <>{`Looks like the page \"${location.pathname}\" could not be found :(`}</>\n}\n\nexport default withRouter(NotFound)\n","import React from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport Container from \"@material-ui/core/Container\"\n\nconst AboutPage = props => {\n    return (\n        <Container>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec fringilla, turpis eu imperdiet tincidunt,\n            nunc enim rutrum lorem, ut condimentum tortor nisl fermentum augue. Nullam vulputate eu augue eget interdum.\n            Nulla facilisi. Nullam vel lectus rhoncus, congue tortor pellentesque, semper neque. Fusce a turpis luctus,\n            placerat lectus vehicula, viverra turpis. Proin magna velit, congue vel iaculis a, tincidunt sed magna.\n            Aliquam erat volutpat. Pellentesque id mauris fermentum, pretium augue vitae, semper enim. Quisque varius,\n            magna eget maximus suscipit, magna dui auctor dolor, ut blandit est eros vitae magna. Mauris suscipit\n            posuere odio, eu sodales dolor tempor rutrum. Aenean condimentum ultricies posuere. Morbi nec condimentum\n            tortor. Donec suscipit dui sit amet malesuada consequat. Mauris nulla ligula, egestas quis ultricies sed,\n            ultricies ac quam. Aenean placerat vulputate efficitur. Aliquam cursus urna elit, nec placerat diam\n            tristique id. Nulla non neque nunc. Quisque semper libero non magna iaculis sodales. Vivamus condimentum\n            lectus eget faucibus efficitur. Etiam sodales congue tortor. Interdum et malesuada fames ac ante ipsum\n            primis in faucibus. Vestibulum rutrum sodales orci ut ultrices. Cras et porta nibh. Cras efficitur nulla\n            elit. Nam sed velit purus. In vel eros in odio congue porta. Quisque tempor non mauris eu cursus. Sed\n            malesuada eu sapien in sagittis. Donec aliquet sodales rutrum. Praesent vitae mauris in diam imperdiet\n            cursus. Cras eget ipsum nunc. Suspendisse et egestas sapien. Aenean at ultrices nisl, eget bibendum justo.\n            Suspendisse eget tortor nec lorem hendrerit elementum vitae id magna. Aenean commodo sagittis neque. In hac\n            habitasse platea dictumst. Donec gravida dignissim tempor. Suspendisse dolor metus, ornare ac condimentum\n            id, pretium sit amet ante. Phasellus sodales, dui nec feugiat dignissim, nunc felis vulputate leo, eu tempus\n            nisl odio sed mi. Aenean aliquet lobortis libero in venenatis. Vivamus imperdiet, eros in scelerisque\n            scelerisque, lectus quam pellentesque ante, ac commodo eros ipsum at risus. In sed magna imperdiet, mattis\n            felis in, pulvinar erat. Praesent ac mattis lorem. Aenean non feugiat elit. Cras vulputate at ligula quis\n            elementum. Aenean a vestibulum augue, eu sollicitudin nisi. Donec eu odio ut elit consequat pellentesque.\n            Aenean at felis consequat, sollicitudin velit non, suscipit ipsum. Aenean quis libero justo. Nam facilisis\n            eleifend faucibus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n            himenaeos. Maecenas augue justo, convallis nec lacus a, faucibus mollis velit. Nam lobortis, justo suscipit\n            feugiat rhoncus, ligula diam aliquam lacus, vitae aliquam eros sapien ut nibh. Fusce auctor sagittis justo\n            vel placerat. Suspendisse eros orci, sodales eu odio nec, aliquam elementum ipsum. Suspendisse et sapien\n            vitae justo consequat iaculis. In dapibus arcu eget orci consequat sollicitudin. Vestibulum at augue diam.\n            Fusce nisi nibh, pellentesque eget scelerisque ut, volutpat quis dolor.\n        </Container>\n    )\n}\n\nexport default withRouter(AboutPage)\n","const routes = {\n    home: '/',\n    about: '/about',\n    contact: '/contact',\n}\n\nexport { routes }","import React from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport LandingPage from \"../pages/LandingPage\"\nimport NotFoundPage from \"../pages/NotFoundPage\"\nimport AboutPage from \"../pages/AboutPage\"\nimport { routes } from \"./routes\"\n\nconst Router = props => {\n    return (\n        <Switch>\n            {/* Landing page route */}\n            <Route exact path={routes.home} render={() => <LandingPage />} />\n\n            {/* About page route */}\n            <Route exact path={routes.about} component={AboutPage} />\n\n            {/* 404 route */}\n            <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n    )\n}\n\nexport default Router\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\n\nimport { OWM_API_KEY_STR } from \"../../config/config\"\nimport { useSnackbar } from \"notistack\"\n\nconst AddAPIKeyModal = props => {\n    const {\n        _closeHandler,\n        // _toggleHandler,\n        isOpen\n    } = props\n    const [apiKey, setApiKey] = useState(\"\")\n    const { enqueueSnackbar } = useSnackbar()\n\n    const _setOWMAPIKey = () => {\n        if (!apiKey) {\n            enqueueSnackbar(\"Please enter your API key\", { variant: \"error\" })\n            return\n        }\n        localStorage.setItem(OWM_API_KEY_STR, apiKey)\n        window.location.reload()\n    }\n\n    const _setStateFromInput = event => {\n        const target = event.target\n        const value = target.type === \"checkbox\" ? target.checked : target.value\n        setApiKey(value)\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={isOpen}\n                onClose={_closeHandler}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Openweathermap API key\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <span>\n                            Don't have an API key? Head over to{\" \"}\n                            <a href=\"https://openweathermap.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                Open Weather Map\n                            </a>{\" \"}\n                            and create a free account\n                        </span>\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"api-key\"\n                        label=\"API Key\"\n                        // type=\"email\"\n                        fullWidth\n                        required\n                        onChange={_setStateFromInput}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={_setOWMAPIKey} color=\"primary\">\n                        Set API key\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default AddAPIKeyModal\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\n\nconst ConfirmModal = props => {\n    const { message, _closeHandler, _onDecide, isOpen } = props\n\n    const _handleAffirm = () => {\n        _onDecide(true)\n        _closeHandler()\n    }\n\n    const _handleDeny = () => {\n        _onDecide(false)\n        _closeHandler()\n    }\n\n    if (isOpen) {\n        return (\n            <>\n                <Dialog\n                    open={isOpen}\n                    onClose={_closeHandler}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Openweathermap API key\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            <span>{message}</span>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button className=\"default-btn-solid danger\" onClick={_handleDeny}>\n                            Cancel\n                        </Button>\n                        <Button className=\"default-btn-solid success\" onClick={_handleAffirm}>\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        )\n    }\n\n    return <></>\n}\n\nexport default ConfirmModal\n","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\"\n// import Button from \"@material-ui/core/Button\"\nimport List from \"@material-ui/core/List\"\nimport Divider from \"@material-ui/core/Divider\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\n\nimport Cancel from \"@material-ui/icons/Cancel\"\nimport Help from \"@material-ui/icons/Help\"\nimport VpnKey from \"@material-ui/icons/VpnKey\"\n// import InboxIcon from \"@material-ui/icons/MoveToInbox\"\n// import MailIcon from \"@material-ui/icons/Mail\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\n\nimport AddAPIKeyModal from \"../modals/AddAPIKeyModal\"\nimport ConfirmModal from \"../modals/ConfirmModal\"\n\nimport { OWM_API_KEY_STR } from \"../../config/config\"\nimport { truncateString } from \"../../utils/_helpers\"\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250\n    },\n    fullList: {\n        width: \"auto\"\n    }\n})\n\nconst apiKey = localStorage.getItem(OWM_API_KEY_STR) || \"\"\n\nconst Drawer = () => {\n    const classes = useStyles()\n    const [isAddAPIKeyModalOpen, setIsAddAPIKeyModalOpen] = useState(false)\n    const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false)\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n\n    const _toggleDrawer = open => event => {\n        if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n            return\n        }\n\n        setIsDrawerOpen(open)\n    }\n\n    const _toggleAddAPIKeyModal = () => {\n        setIsAddAPIKeyModalOpen(!isAddAPIKeyModalOpen)\n    }\n\n    const _toggleConfirmModal = () => {\n        setIsConfirmModalOpen(!isConfirmModalOpen)\n    }\n\n    const _renderAPIKeyDrawerItem = () => {\n        if (apiKey) {\n            return (\n                <ListItem>\n                    <ListItemIcon>\n                        <VpnKey />\n                    </ListItemIcon>\n                    <ListItemText color=\"red\">API key: {truncateString(apiKey, 5)}</ListItemText>\n                </ListItem>\n            )\n        }\n        return (\n            <ListItem\n                button\n                onClick={() => {\n                    _toggleAddAPIKeyModal()\n                    // _handleClose()\n                }}\n            >\n                <ListItemIcon>\n                    <VpnKey />\n                </ListItemIcon>\n                <ListItemText>Add API key</ListItemText>\n            </ListItem>\n        )\n    }\n\n    const _renderDrawerItems = () => (\n        <div\n            className={classes.list}\n            role=\"presentation\"\n            onClick={_toggleDrawer(false)}\n            onKeyDown={_toggleDrawer(false)}\n        >\n            <List>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Help />\n                    </ListItemIcon>\n                    <ListItemText>\n                        <Link to=\"/about\">About</Link>\n                    </ListItemText>\n                </ListItem>\n                {_renderAPIKeyDrawerItem()}\n            </List>\n            <Divider />\n            <List>\n                {apiKey ? (\n                    <ListItem button onClick={_toggleConfirmModal}>\n                        <ListItemIcon>\n                            <Cancel />\n                        </ListItemIcon>\n                        <ListItemText primary={\"Remove API key\"} />\n                    </ListItem>\n                ) : (\n                    <></>\n                )}\n            </List>\n        </div>\n    )\n\n    return (\n        <>\n            <AddAPIKeyModal\n                isOpen={isAddAPIKeyModalOpen}\n                _closeHandler={() => {\n                    setIsAddAPIKeyModalOpen(false)\n                }}\n                _toggleHandler={_toggleAddAPIKeyModal}\n            />\n            <ConfirmModal\n                message={\"Are you sure you want to remove your API key?\"}\n                _closeHandler={() => {\n                    setIsConfirmModalOpen(false)\n                }}\n                _toggleHandler={_toggleConfirmModal}\n                _onDecide={isConfirmed => {\n                    if (isConfirmed) {\n                        localStorage.setItem(OWM_API_KEY_STR, \"\")\n                        window.location.reload()\n                    }\n                }}\n                isOpen={isConfirmModalOpen}\n            />\n            <MenuIcon onClick={_toggleDrawer(true)} />\n            <SwipeableDrawer open={isDrawerOpen} onClose={_toggleDrawer(false)} onOpen={_toggleDrawer(true)}>\n                {_renderDrawerItems()}\n            </SwipeableDrawer>\n        </>\n    )\n}\n\nexport default connect(\"\", \"\")(Drawer)\n","import React from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport Brightness6 from \"@material-ui/icons/Brightness6\"\nimport GitHub from \"@material-ui/icons/GitHub\"\n\nimport { Link } from \"react-router-dom\"\nimport Drawer from \"./Drawer\"\n\nimport { THEME_SETTING_STR } from \"../../config/config\"\n\nconst NavBarMaterial = () => {\n    // const [anchorEl, setAnchorEl] = useState(null)\n    const themeSetting = localStorage.getItem(THEME_SETTING_STR) || \"\"\n\n    const _setTheme = () => {\n        themeSetting === \"light\"\n            ? localStorage.setItem(THEME_SETTING_STR, \"\")\n            : localStorage.setItem(THEME_SETTING_STR, \"light\")\n        window.location.reload()\n    }\n\n    return (\n        <div className={\"nav-bar\"}>\n            <AppBar position=\"static\" color=\"inherit\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={\"menu-button\"} color=\"inherit\" aria-label=\"menu\">\n                        <Drawer />\n                        {/* <MenuIcon /> */}\n                    </IconButton>\n\n                    <Typography variant=\"h6\" className={\"title\"}>\n                        <Link to=\"/\">ReWeather</Link>\n                    </Typography>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={_setTheme}>\n                        <Brightness6 />\n                    </IconButton>\n                    <div className=\"ml-5\">\n                        <a\n                            href=\"https://github.com/rjames1295/react-weather-app\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <GitHub />\n                        </a>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default NavBarMaterial\n","import React from \"react\"\n\nconst Footer = props => {\n    return (\n        <footer>\n            {/* bye felicia */}\n        </footer>\n    )\n}\n\nexport default Footer","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { OWM_API_KEY_STR } from \"../../config/config\"\n\nimport Button from \"@material-ui/core/Button\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport AddAPIKeyModal from \"../modals/AddAPIKeyModal\"\n\nconst mapStateToProps = state => ({\n    warningList: state.warningList || [],\n    errorList: state.errorList || []\n})\n\nconst Alerts = props => {\n    const { warningList } = props\n    const apiKey = localStorage.getItem(OWM_API_KEY_STR) || \"\"\n\n    const [isAddAPIKeyModalOpen, setIsAddAPIKeyModalOpen] = useState(false)\n\n    return (\n        <>\n            <AddAPIKeyModal\n                isOpen={isAddAPIKeyModalOpen}\n                _closeHandler={() => {\n                    setIsAddAPIKeyModalOpen(false)\n                }}\n                _toggleHandler={() => {\n                    setIsAddAPIKeyModalOpen(!isAddAPIKeyModalOpen)\n                }}\n            />\n            <div className=\"pl-5 pr-5 pb-3 pt-3\">\n                {!apiKey && (\n                    <Alert variant=\"filled\" severity=\"info\" className=\"mb-2\" action={\n                        <Button onClick={() => {\n                            setIsAddAPIKeyModalOpen(!isAddAPIKeyModalOpen)\n                        }}>\n                            Add API Key\n                        </Button>\n                    }>\n                        You will need to provide an API key before you can access weather info!\n\n                    </Alert>\n                )}\n                {warningList &&\n                    warningList.map((warning, index) => {\n                        return (\n                            <Alert variant=\"filled\" severity=\"warning\" className=\"mb-2\" key={index}>\n                                {String(warning)}\n                            </Alert>\n                        )\n                    })}\n\n                {props.errorList &&\n                    props.errorList.map((error, index) => {\n                        return (\n                            <>\n                                <Alert variant=\"filled\" severity=\"error\" className=\"mb-2\" key={index} action={\n                                    <Button>\n                                        Send an e-mail about this error\n                                    </Button>\n                                }>\n                                    {String(error)}\n                                </Alert>\n                            </>\n                        )\n                    })}\n            </div>\n        </>\n    )\n}\n\nexport default connect(mapStateToProps, \"\")(Alerts)\n","import { createMuiTheme } from \"@material-ui/core/styles\"\nimport orange from \"@material-ui/core/colors/orange\"\n// import purple from \"@material-ui/core/colors/purple\"\nimport green from \"@material-ui/core/colors/green\"\n// import dark from \"@material-ui/core/colors\"\n\nimport { THEME_SETTING_STR } from \"../config/config\"\nconst themeSetting = localStorage.getItem(THEME_SETTING_STR) || \"\"\nconst isLightTheme = themeSetting === \"light\" ? true : false\n\nconst darkTheme = {\n    palette: {\n        type: \"dark\",\n        primary: orange,\n        secondary: green,\n        text: {\n            primary: \"#fff\",\n            secondary: \"#fff !important\", //\"rgba(255, 255, 255, 0.7)\",\n            disabled: \"rgba(255, 255, 255, 0.5)\",\n            hint: \"rgba(255, 255, 255, 0.5)\",\n            icon: \"rgba(255, 255, 255, 0.5)\"\n        }\n    }\n}\n\nconst lightTheme = {}\n\nconst materialTheme = isLightTheme ? createMuiTheme(lightTheme) : createMuiTheme(darkTheme)\n\nexport default materialTheme\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport Router from \"./router/router\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store/Store\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { SnackbarProvider } from \"notistack\"\n// import NavBar from \"./components/shared/NavBar\"\nimport NavBarMaterial from \"./components/shared/NavBarMaterial\"\nimport Footer from \"./components/shared/Footer\"\nimport Alerts from \"./components/shared/Alerts\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport materialTheme from \"./assets/material-theme\"\n\n// Start CSS imports\nimport \"./assets/main.scss\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\n\nReactDOM.render(\n    <ThemeProvider theme={materialTheme}>\n        <CssBaseline />\n        <Provider store={store}>\n            <BrowserRouter>\n                <SnackbarProvider maxSnack={5}>\n                    {/* <NavBar /> */}\n                    <NavBarMaterial />\n                    <Alerts />\n                    <Router />\n                    <Footer />\n                </SnackbarProvider>\n            </BrowserRouter>\n        </Provider>\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}